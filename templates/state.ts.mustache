import { combineReducers, configureStore } from '@reduxjs/toolkit'
import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'
{{#slices}}
import {{.}}, { {{.}}Sanitizer } from './{{.}}Slice'
{{/slices}}

export const rootReducer = combineReducers({
{{#slices}}
  {{.}},
{{/slices}}
})

export const stateSanitizer = (state: RootState): object => ({
{{#slices}}
  {{.}}: {{.}}Sanitizer(state.{{.}}),
{{/slices}}
})

const createStore = () => configureStore({ reducer: rootReducer })
export type Store = ReturnType<typeof createStore>
export type RootState = ReturnType<Store['getState']>
export type AppDispatch = Store['dispatch']

export const useAppDispatch = () => useDispatch<AppDispatch>()
export const useAppSelector: TypedUseSelectorHook<RootState> = useSelector

{{#slices}}
export * from './{{.}}Slice'
{{/slices}}
